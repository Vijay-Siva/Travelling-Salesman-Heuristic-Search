from tsp import *
from heuristics import * 
from search import * 

#TSP test cases 
E = [24, 19, 46, 35, 39, 1, 4, 45, 37, 48, 8, 27, 33, 25, 11, 44, 6, 31, 5, 36, 28, 7, 17, 42, 22, 3, 49, 29, 15, 16, 18, 50, 41, 34, 47, 38, 10, 9, 13, 4
0, 26, 43, 23, 30, 2, 12, 21, 20, 32, 14]

V = [(24, 19, 1), (19, 46, 1), (46, 35, 1), (35, 39, 1), (39, 1, 1), (1, 4, 1), (4, 45, 1), (45, 37, 1), (37, 48, 1), (48, 8, 1), (8, 27, 1), (27, 33, 1),
 (33, 25, 1), (25, 11, 1), (11, 44, 1), (44, 6, 1), (6, 31, 1), (31, 5, 1), (5, 36, 1), (36, 28, 1), (28, 7, 1), (7, 17, 1), (17, 42, 1), (42, 22, 1),
 (22, 3, 1), (3, 49, 1), (49, 29, 1), (29, 15, 1), (15, 16, 1), (16, 18, 1), (18, 50, 1), (50, 41, 1), (41, 34, 1), (34, 47, 1), (47, 38, 1), (38, 10,
 1), (10, 9, 1), (9, 13, 1), (13, 40, 1), (40, 26, 1), (26, 43, 1), (43, 23, 1), (23, 30, 1), (30, 2, 1), (2, 12, 1), (12, 21, 1), (21, 20, 1), (20, 3
2, 1), (32, 14, 1), (14, 24, 1), (24, 19, 2), (19, 46, 2), (46, 35, 4), (35, 39, 4), (39, 1, 4), (1, 4, 1), (4, 45, 3), (45, 37, 4), (37, 48, 2), (48,
 8, 4), (8, 27, 5), (27, 33, 2), (33, 25, 2), (25, 11, 4), (11, 44, 5), (44, 6, 5), (6, 31, 3), (31, 5, 2), (5, 36, 5), (36, 28, 2), (28, 7, 4), (7, 1
7, 4), (17, 42, 2), (42, 22, 4), (22, 3, 3), (3, 49, 3), (49, 29, 5), (29, 15, 4), (15, 16, 1), (16, 18, 2), (18, 50, 1), (50, 41, 5), (41, 34, 3), (3
4, 47, 4), (47, 38, 1), (38, 10, 3), (10, 9, 2), (9, 13, 1), (13, 40, 1), (40, 26, 4), (26, 43, 1), (43, 23, 4), (23, 30, 2), (30, 2, 4), (2, 12, 3),
(12, 21, 5), (21, 20, 3), (20, 32, 2), (32, 14, 5), (14, 24, 5)]

Tests = [TSPState("Start", 0, None, [], [1, 2, 3, 4], [], 
            [(1, 2, 1), (2, 3, 1), (3, 4, 1), (4, 1, 1), (2, 4, 5), (1, 3, 7)], 4),
            TSPState("Start", 0, None, [], [1, 2, 3, 4], [], 
            [(1, 2, 10), (1, 3, 15), (1, 4, 20), (2, 1, 10), (2, 3, 35), (2, 4, 25),
                (3, 1, 15), (3, 2, 35), (3, 4, 30), (4, 1, 20), (4, 2, 25), 
                    (4, 3, 30)], 70), 
        TSPState("Start", 0, None, [], E, [], V, 10)]


if __name__ == "__main__":
    se = SearchEngine('best_first', 'none')
    for test_case in Tests:
        final = se.search(initState=test_case, heur_fn=two_shortest, goal_fn=goal_state)