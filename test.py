from tsp import *
from heuristics import * 
from search import * 

#TSP test cases 
E = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]
V = [[1, 2, 5], [2, 3, 4], [3, 4, 3], [4, 5, 1], [5, 6, 2], [6, 7, 5], [7, 8, 3], [8, 9, 2], [9, 10, 2], [10, 11, 2], [11, 12, 4], [12, 13, 2], [13, 14, 3
], [14, 15, 3], [15, 16, 4], [16, 17, 2], [17, 18, 5], [18, 19, 3], [19, 20, 1], [20, 21, 2], [21, 22, 2], [22, 23, 5], [23, 24, 4], [24, 25, 1], [25,
 26, 1], [26, 27, 2], [27, 28, 5], [28, 29, 2], [29, 30, 1], [30, 31, 2], [31, 32, 1], [32, 33, 4], [33, 34, 2], [34, 35, 4], [35, 36, 4], [36, 37, 2]
, [37, 38, 5], [38, 39, 2], [39, 40, 5], [40, 41, 5], [41, 42, 5], [42, 43, 4], [43, 44, 4], [44, 45, 1], [45, 46, 1], [46, 47, 5], [47, 48, 1], [48,
49, 4], [49, 50, 3], [1, 2, 1], [2, 3, 4], [3, 4, 2], [4, 5, 4], [5, 6, 5], [6, 7, 2], [7, 8, 5], [8, 9, 4], [9, 10, 2], [10, 11, 2], [11, 12, 1], [12
, 13, 1], [13, 14, 1], [14, 15, 4], [15, 16, 3], [16, 17, 4], [17, 18, 1], [18, 19, 3], [19, 20, 4], [20, 21, 5], [21, 22, 4], [22, 23, 1], [23, 24, 2
], [24, 25, 4], [25, 26, 5], [26, 27, 4], [27, 28, 3], [28, 29, 1], [29, 30, 1], [30, 31, 5], [31, 32, 2], [32, 33, 4], [33, 34, 2], [34, 35, 5], [35,
 36, 4], [36, 37, 5], [37, 38, 5], [38, 39, 5], [39, 40, 5], [40, 41, 3], [41, 42, 1], [42, 43, 3], [43, 44, 2], [44, 45, 3], [45, 46, 1], [46, 47, 2]
, [47, 48, 5], [48, 49, 5], [49, 50, 3], [1, 2, 1], [2, 3, 1], [3, 4, 3], [4, 5, 4], [5, 6, 2], [6, 7, 3], [7, 8, 5], [8, 9, 5], [9, 10, 4], [10, 11,
3], [11, 12, 5], [12, 13, 1], [13, 14, 3], [14, 15, 3], [15, 16, 1], [16, 17, 3], [17, 18, 2], [18, 19, 3], [19, 20, 3], [20, 21, 3], [21, 22, 4], [22
, 23, 5], [23, 24, 5], [24, 25, 1], [25, 26, 2], [26, 27, 1], [27, 28, 4], [28, 29, 4], [29, 30, 1], [30, 31, 2], [31, 32, 4], [32, 33, 5], [33, 34, 5
], [34, 35, 4], [35, 36, 4], [36, 37, 4], [37, 38, 3], [38, 39, 2], [39, 40, 2], [40, 41, 2], [41, 42, 3], [42, 43, 4], [43, 44, 3], [44, 45, 2], [45,
 46, 1], [46, 47, 2], [47, 48, 2], [48, 49, 4], [49, 50, 1], [32, 11, 5], [35, 18, 1], [39, 6, 2], [19, 19, 2], [24, 15, 1], [22, 2, 4], [47, 45, 1],
[38, 29, 1], [43, 37, 5], [17, 1, 5], [38, 34, 1], [35, 7, 4], [2, 24, 5], [48, 9, 2], [33, 17, 1], [37, 41, 3], [30, 14, 3], [35, 46, 4], [3, 18, 4],
 [26, 9, 3], [2, 43, 3], [1, 38, 2], [40, 45, 3], [24, 32, 1], [50, 12, 1], [3, 1, 3], [3, 41, 1], [27, 33, 1], [6, 29, 5], [12, 36, 3], [16, 30, 3],
[16, 27, 3], [31, 39, 5], [30, 15, 2], [4, 41, 5], [21, 31, 4], [18, 21, 1], [8, 36, 5], [32, 19, 4], [16, 16, 5], [44, 32, 3], [23, 21, 3], [15, 13,
3], [43, 19, 3], [11, 15, 4], [34, 24, 1], [43, 25, 2], [35, 43, 5], [6, 24, 2], [9, 7, 1]]

Tests = [TSPState("Start", 0, None, [], [1, 2, 3, 4], [], 
            [(1, 2, 1), (2, 3, 1), (3, 4, 1), (4, 1, 1), (2, 4, 5), (1, 3, 7)], 4),
            TSPState("Start", 0, None, [], [1, 2, 3, 4], [], 
            [(1, 2, 10), (1, 3, 15), (1, 4, 20), (2, 1, 10), (2, 3, 35), (2, 4, 25),
                (3, 1, 15), (3, 2, 35), (3, 4, 30), (4, 1, 20), (4, 2, 25), 
                    (4, 3, 30)], 70), 
        TSPState("Start", 0, None, [], E, [], V, 10)]


if __name__ == "__main__":
    se = SearchEngine('best_first', 'none')
    for test_case in Tests:
        final = se.search(initState=test_case, heur_fn=two_shortest, goal_fn=goal_state)